// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: common/operating_system.proto

package common

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperatingSystemType int32

const (
	OperatingSystemType_LINUX   OperatingSystemType = 0
	OperatingSystemType_WINDOWS OperatingSystemType = 1
	OperatingSystemType_UBUNTU  OperatingSystemType = 2
	OperatingSystemType_CENTOS  OperatingSystemType = 3
	OperatingSystemType_DEBIAN  OperatingSystemType = 4
)

// Enum value maps for OperatingSystemType.
var (
	OperatingSystemType_name = map[int32]string{
		0: "LINUX",
		1: "WINDOWS",
		2: "UBUNTU",
		3: "CENTOS",
		4: "DEBIAN",
	}
	OperatingSystemType_value = map[string]int32{
		"LINUX":   0,
		"WINDOWS": 1,
		"UBUNTU":  2,
		"CENTOS":  3,
		"DEBIAN":  4,
	}
)

func (x OperatingSystemType) Enum() *OperatingSystemType {
	p := new(OperatingSystemType)
	*p = x
	return p
}

func (x OperatingSystemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operating_system_proto_enumTypes[0].Descriptor()
}

func (OperatingSystemType) Type() protoreflect.EnumType {
	return &file_common_operating_system_proto_enumTypes[0]
}

func (x OperatingSystemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemType.Descriptor instead.
func (OperatingSystemType) EnumDescriptor() ([]byte, []int) {
	return file_common_operating_system_proto_rawDescGZIP(), []int{0}
}

type OperatingSystemWindowsVersion int32

const (
	OperatingSystemWindowsVersion_WINDOWS_10 OperatingSystemWindowsVersion = 0
	OperatingSystemWindowsVersion_WINDOWS_11 OperatingSystemWindowsVersion = 1
)

// Enum value maps for OperatingSystemWindowsVersion.
var (
	OperatingSystemWindowsVersion_name = map[int32]string{
		0: "WINDOWS_10",
		1: "WINDOWS_11",
	}
	OperatingSystemWindowsVersion_value = map[string]int32{
		"WINDOWS_10": 0,
		"WINDOWS_11": 1,
	}
)

func (x OperatingSystemWindowsVersion) Enum() *OperatingSystemWindowsVersion {
	p := new(OperatingSystemWindowsVersion)
	*p = x
	return p
}

func (x OperatingSystemWindowsVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemWindowsVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operating_system_proto_enumTypes[1].Descriptor()
}

func (OperatingSystemWindowsVersion) Type() protoreflect.EnumType {
	return &file_common_operating_system_proto_enumTypes[1]
}

func (x OperatingSystemWindowsVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemWindowsVersion.Descriptor instead.
func (OperatingSystemWindowsVersion) EnumDescriptor() ([]byte, []int) {
	return file_common_operating_system_proto_rawDescGZIP(), []int{1}
}

type OperatingSystemUbuntuVersion int32

const (
	OperatingSystemUbuntuVersion_UBUNTU_18_04 OperatingSystemUbuntuVersion = 0
	OperatingSystemUbuntuVersion_UBUNTU_20_04 OperatingSystemUbuntuVersion = 1
	OperatingSystemUbuntuVersion_UBUNTU_22_04 OperatingSystemUbuntuVersion = 2
)

// Enum value maps for OperatingSystemUbuntuVersion.
var (
	OperatingSystemUbuntuVersion_name = map[int32]string{
		0: "UBUNTU_18_04",
		1: "UBUNTU_20_04",
		2: "UBUNTU_22_04",
	}
	OperatingSystemUbuntuVersion_value = map[string]int32{
		"UBUNTU_18_04": 0,
		"UBUNTU_20_04": 1,
		"UBUNTU_22_04": 2,
	}
)

func (x OperatingSystemUbuntuVersion) Enum() *OperatingSystemUbuntuVersion {
	p := new(OperatingSystemUbuntuVersion)
	*p = x
	return p
}

func (x OperatingSystemUbuntuVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemUbuntuVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operating_system_proto_enumTypes[2].Descriptor()
}

func (OperatingSystemUbuntuVersion) Type() protoreflect.EnumType {
	return &file_common_operating_system_proto_enumTypes[2]
}

func (x OperatingSystemUbuntuVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemUbuntuVersion.Descriptor instead.
func (OperatingSystemUbuntuVersion) EnumDescriptor() ([]byte, []int) {
	return file_common_operating_system_proto_rawDescGZIP(), []int{2}
}

type OperatingSystemCentOSVersion int32

const (
	OperatingSystemCentOSVersion_CENTOS_7 OperatingSystemCentOSVersion = 0
	OperatingSystemCentOSVersion_CENTOS_8 OperatingSystemCentOSVersion = 1
)

// Enum value maps for OperatingSystemCentOSVersion.
var (
	OperatingSystemCentOSVersion_name = map[int32]string{
		0: "CENTOS_7",
		1: "CENTOS_8",
	}
	OperatingSystemCentOSVersion_value = map[string]int32{
		"CENTOS_7": 0,
		"CENTOS_8": 1,
	}
)

func (x OperatingSystemCentOSVersion) Enum() *OperatingSystemCentOSVersion {
	p := new(OperatingSystemCentOSVersion)
	*p = x
	return p
}

func (x OperatingSystemCentOSVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemCentOSVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operating_system_proto_enumTypes[3].Descriptor()
}

func (OperatingSystemCentOSVersion) Type() protoreflect.EnumType {
	return &file_common_operating_system_proto_enumTypes[3]
}

func (x OperatingSystemCentOSVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemCentOSVersion.Descriptor instead.
func (OperatingSystemCentOSVersion) EnumDescriptor() ([]byte, []int) {
	return file_common_operating_system_proto_rawDescGZIP(), []int{3}
}

type OperatingSystemDebianVersion int32

const (
	OperatingSystemDebianVersion_DEBIAN_9  OperatingSystemDebianVersion = 0
	OperatingSystemDebianVersion_DEBIAN_10 OperatingSystemDebianVersion = 1
	OperatingSystemDebianVersion_DEBIAN_11 OperatingSystemDebianVersion = 2
)

// Enum value maps for OperatingSystemDebianVersion.
var (
	OperatingSystemDebianVersion_name = map[int32]string{
		0: "DEBIAN_9",
		1: "DEBIAN_10",
		2: "DEBIAN_11",
	}
	OperatingSystemDebianVersion_value = map[string]int32{
		"DEBIAN_9":  0,
		"DEBIAN_10": 1,
		"DEBIAN_11": 2,
	}
)

func (x OperatingSystemDebianVersion) Enum() *OperatingSystemDebianVersion {
	p := new(OperatingSystemDebianVersion)
	*p = x
	return p
}

func (x OperatingSystemDebianVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemDebianVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operating_system_proto_enumTypes[4].Descriptor()
}

func (OperatingSystemDebianVersion) Type() protoreflect.EnumType {
	return &file_common_operating_system_proto_enumTypes[4]
}

func (x OperatingSystemDebianVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemDebianVersion.Descriptor instead.
func (OperatingSystemDebianVersion) EnumDescriptor() ([]byte, []int) {
	return file_common_operating_system_proto_rawDescGZIP(), []int{4}
}

var File_common_operating_system_proto protoreflect.FileDescriptor

var file_common_operating_system_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x76, 0x69, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x51, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x49, 0x4e,
	0x44, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x42, 0x55, 0x4e, 0x54, 0x55,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x45, 0x4e, 0x54, 0x4f, 0x53, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x42, 0x49, 0x41, 0x4e, 0x10, 0x04, 0x2a, 0x3f, 0x0a, 0x1d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x31, 0x30, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f, 0x31, 0x31, 0x10, 0x01, 0x2a, 0x54, 0x0a, 0x1c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x62,
	0x75, 0x6e, 0x74, 0x75, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x42, 0x55, 0x4e, 0x54, 0x55, 0x5f, 0x31, 0x38, 0x5f, 0x30, 0x34, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x42, 0x55, 0x4e, 0x54, 0x55, 0x5f, 0x32, 0x30, 0x5f, 0x30, 0x34, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x42, 0x55, 0x4e, 0x54, 0x55, 0x5f, 0x32, 0x32, 0x5f, 0x30, 0x34, 0x10,
	0x02, 0x2a, 0x3a, 0x0a, 0x1c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x65, 0x6e, 0x74, 0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x45, 0x4e, 0x54, 0x4f, 0x53, 0x5f, 0x37, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x45, 0x4e, 0x54, 0x4f, 0x53, 0x5f, 0x38, 0x10, 0x01, 0x2a, 0x4a, 0x0a,
	0x1c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x62, 0x69, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x45, 0x42, 0x49, 0x41, 0x4e, 0x5f, 0x39, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x45, 0x42, 0x49, 0x41, 0x4e, 0x5f, 0x31, 0x30, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45,
	0x42, 0x49, 0x41, 0x4e, 0x5f, 0x31, 0x31, 0x10, 0x02, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x76, 0x6d, 0x2e, 0x69,
	0x6f, 0x2f, 0x76, 0x69, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_operating_system_proto_rawDescOnce sync.Once
	file_common_operating_system_proto_rawDescData = file_common_operating_system_proto_rawDesc
)

func file_common_operating_system_proto_rawDescGZIP() []byte {
	file_common_operating_system_proto_rawDescOnce.Do(func() {
		file_common_operating_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_operating_system_proto_rawDescData)
	})
	return file_common_operating_system_proto_rawDescData
}

var file_common_operating_system_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_common_operating_system_proto_goTypes = []interface{}{
	(OperatingSystemType)(0),           // 0: vink.common.OperatingSystemType
	(OperatingSystemWindowsVersion)(0), // 1: vink.common.OperatingSystemWindowsVersion
	(OperatingSystemUbuntuVersion)(0),  // 2: vink.common.OperatingSystemUbuntuVersion
	(OperatingSystemCentOSVersion)(0),  // 3: vink.common.OperatingSystemCentOSVersion
	(OperatingSystemDebianVersion)(0),  // 4: vink.common.OperatingSystemDebianVersion
}
var file_common_operating_system_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_operating_system_proto_init() }
func file_common_operating_system_proto_init() {
	if File_common_operating_system_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_operating_system_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_operating_system_proto_goTypes,
		DependencyIndexes: file_common_operating_system_proto_depIdxs,
		EnumInfos:         file_common_operating_system_proto_enumTypes,
	}.Build()
	File_common_operating_system_proto = out.File
	file_common_operating_system_proto_rawDesc = nil
	file_common_operating_system_proto_goTypes = nil
	file_common_operating_system_proto_depIdxs = nil
}
