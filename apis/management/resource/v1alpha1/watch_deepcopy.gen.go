// Code generated by protoc-gen-deepcopy. DO NOT EDIT.
package v1alpha1

import (
	proto "github.com/golang/protobuf/proto"
)

// DeepCopyInto supports using WatchRequest within kubernetes types, where deepcopy-gen is used.
func (in *WatchRequest) DeepCopyInto(out *WatchRequest) {
	p := proto.Clone(in).(*WatchRequest)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchRequest. Required by controller-gen.
func (in *WatchRequest) DeepCopy() *WatchRequest {
	if in == nil {
		return nil
	}
	out := new(WatchRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new WatchRequest. Required by controller-gen.
func (in *WatchRequest) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using WatchResponse within kubernetes types, where deepcopy-gen is used.
func (in *WatchResponse) DeepCopyInto(out *WatchResponse) {
	p := proto.Clone(in).(*WatchResponse)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchResponse. Required by controller-gen.
func (in *WatchResponse) DeepCopy() *WatchResponse {
	if in == nil {
		return nil
	}
	out := new(WatchResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new WatchResponse. Required by controller-gen.
func (in *WatchResponse) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using WatchOptions within kubernetes types, where deepcopy-gen is used.
func (in *WatchOptions) DeepCopyInto(out *WatchOptions) {
	p := proto.Clone(in).(*WatchOptions)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchOptions. Required by controller-gen.
func (in *WatchOptions) DeepCopy() *WatchOptions {
	if in == nil {
		return nil
	}
	out := new(WatchOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new WatchOptions. Required by controller-gen.
func (in *WatchOptions) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
